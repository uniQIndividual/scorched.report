---
import pkg from "../../package.json" assert { type: "json" };
import { url } from "../env.d.ts";

const { class: clazz } = Astro.props;
import FooterSidebar from "./FooterSidebar.astro";
import NavBarSidebar from "./NavBarSidebar.astro";
import SideBar from "./SideBar.astro";
import "/src/styles/global.css";

const {
	og_title = "Scorched Report",
	og_description = "The home of everything Team Scorched",
	og_image = "https://scorched.report/images/logo2.png",
	og_hero_image,
	title,
	make_title,
	date,
	author,
	tags = ["Scorched Report", "Team Scorched", "Destiny 2"],
	fullscreen = false,
} = Astro.props;

let newSlug = "";
if (title) {
	newSlug = title
		.toLowerCase()
		.replaceAll(" ", "-")
		.replaceAll(/[^\w-_]/gm, "");
}

// Build JSON-LD

let searchJsonLd: { [key: string]: string | number | Object } = {
	"@context": "https://schema.org",
	name: og_title,
	description: og_description,
	inLanguage: "en-US",
};

if (date === undefined) {
	// just website
	searchJsonLd["@type"] = "WebSite";
	searchJsonLd["url"] = "https://scorched.report/";
	searchJsonLd["sameAs"] = [
		"https://scorched-report.pages.dev/",
		"https://github.com/uniQIndividual/scorched.report",
	];
	searchJsonLd["image"] = [og_image];
} else {
	// article
	searchJsonLd["@type"] = "NewsArticle";
	searchJsonLd["headline"] = title;
	searchJsonLd["datePublished"] = new Date(date).toISOString();
	searchJsonLd["image"] = [og_image];
	//searchJsonLd["image"] = ["https://example.com/photos/1x1/photo.jpg"];
}
if (author != undefined) {
	searchJsonLd["author"] = [{ "@type": "Person", name: author }];
}
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>
			{(title != undefined ? title + " | " : "") + "Scorched Report"}
		</title>

		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={pkg.description} />
		<link rel="icon" type="image/svg+xml" href={"/images/logo2.png"} />
		<link rel="apple-touch-icon" href={"/apple-touch-icon.png"} />
		<link
			rel="sitemap"
			type="application/xml"
			href={url("sitemap-index.xml")}
		/>

		<meta name="author" content="uniQ" />
		<meta name="copyright" content="MIT" />
		<meta property="og:image" content={og_image} />
		{
			og_hero_image === undefined ? (
				""
			) : (
			<meta name="twitter:card" content="summary_large_image" />
			<meta name="twitter:image:src" content={og_hero_image} />
			)
		}
		<meta property="og:image:type" content="image/png" />
		<meta property="og:image:alt" content="Team Scorched Logo" />
		<meta property="og:title" content={og_title} />
		<meta property="og:site_name" content="Scorched Report" />
		<meta property="og:description" content={og_description} />
		<meta name="theme-color" content="#8a2a2a">
		<meta
			property="og:type"
			content={date === undefined ? "website" : "article"}
		/>
		{
			date === undefined ? (
				""
			) : (
				<meta property="article:published_time" content={date} />
			)
		}
		{
			author === undefined ? (
				""
			) : (
				<meta property="article:author" content={author} />
			)
		}
		{tags.map((tag: string) => <meta property="article:tag" content={tag} />)}
		<meta property="og:url" content="https://scorched.report/" />

		<script
			type="application/ld+json"
			set:html={JSON.stringify(searchJsonLd)}
		/>

		<script is:inline>
			if (
				localStorage.getItem("color-theme") === "dark" ||
				(!("color-theme" in localStorage) &&
					window.matchMedia("(prefers-color-scheme: dark)").matches)
			) {
				document.documentElement.classList.add("dark");
			} else {
				document.documentElement.classList.remove("dark");
			}
		</script>
	</head>
	<body
		class:list={[
			//
			clazz,
			"bg-gray-50 dark:bg-gray-900",
			"scrollbar scrollbar-w-3 scrollbar-thumb-rounded-[0.25rem]",
			"scrollbar-track-slate-200  scrollbar-thumb-gray-400",
			"dark:scrollbar-track-gray-900 dark:scrollbar-thumb-gray-700 cursor-default",
		]}
	>
		<NavBarSidebar fullscreen={fullscreen} />

		<SideBar fullscreen={fullscreen} />
		<div>
			<div
				class={"flex overflow-hidden bg-gray-50 dark:bg-gray-900" +
					(fullscreen ? "" : " pt-16 ")}
			>
				<div
					id="main-content"
					class={"relative w-full h-full overflow-y-hidden bg-gray-50 dark:bg-gray-900 min-h-screen text-gray-500 dark:text-gray-400 " +
						(fullscreen ? "" : " lg:ml-[400px] lg:mr-4 lg:mt-2 mx-2")}
				>
					{
						make_title ? (
							<h1
								class="text-gray-900 dark:text-gray-100 text-center font-bold text-4xl lg:text-5xl 3xl:text-5xl m-8"
								id={newSlug}
							>
								{make_title}
							</h1>
						) : (
							""
						)
					}
					<slot />
					{fullscreen ? "" : <FooterSidebar />}
				</div>
			</div>
		</div>
	</body>

	<script>
		import "flowbite";
	</script>

	<style is:global>
		.apexcharts-menu {
			border: 0px !important;
		}

		/* Fonts */

		/* cyrillic-ext */
		@font-face {
			font-family: "Manrope";
			font-style: normal;
			font-weight: 200 800;
			font-display: swap;
			src: url(/resources/fonts/Manrope/xn7gYHE41ni1AdIRggqxSuXd.woff2)
				format("woff2");
			unicode-range:
				U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
		}
		/* cyrillic */
		@font-face {
			font-family: "Manrope";
			font-style: normal;
			font-weight: 200 800;
			font-display: swap;
			src: url(/resources/fonts/Manrope/xn7gYHE41ni1AdIRggOxSuXd.woff2)
				format("woff2");
			unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
		}
		/* greek */
		@font-face {
			font-family: "Manrope";
			font-style: normal;
			font-weight: 200 800;
			font-display: swap;
			src: url(/resources/fonts/Manrope/xn7gYHE41ni1AdIRggSxSuXd.woff2)
				format("woff2");
			unicode-range:
				U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
		}
		/* vietnamese */
		@font-face {
			font-family: "Manrope";
			font-style: normal;
			font-weight: 200 800;
			font-display: swap;
			src: url(/resources/fonts/Manrope/xn7gYHE41ni1AdIRggixSuXd.woff2)
				format("woff2");
			unicode-range:
				U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1,
				U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329,
				U+1EA0-1EF9, U+20AB;
		}
		/* latin-ext */
		@font-face {
			font-family: "Manrope";
			font-style: normal;
			font-weight: 200 800;
			font-display: swap;
			src: url(/resources/fonts/Manrope/xn7gYHE41ni1AdIRggmxSuXd.woff2)
				format("woff2");
			unicode-range:
				U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304,
				U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020,
				U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
		}
		/* latin */
		@font-face {
			font-family: "Manrope";
			font-style: normal;
			font-weight: 200 800;
			font-display: swap;
			src: url(/resources/fonts/Manrope/xn7gYHE41ni1AdIRggexSg.woff2)
				format("woff2");
			unicode-range:
				U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,
				U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193,
				U+2212, U+2215, U+FEFF, U+FFFD;
		}
		/* SVG FIRE */

		#svg-view {
			width: 252px;
			height: 125px;
			left: 0px;
		}

		.mo-fire svg {
			width: 100%;
			height: auto;
			position: relative;
			right: 40px;
		}
		.flame {
			animation-name: flameDisappear;
			animation-duration: 2s;
			animation-timing-function: linear;
			animation-iteration-count: infinite;
			opacity: 0.5;
			transform-origin: 45% 45% 0;
		}
		.flame.one {
			animation-delay: 1s;
			animation-duration: 3s;
		}
		.flame.two {
			animation-duration: 5s;
			animation-delay: 1s;
		}

		.flame-main {
			animation-name: flameMovement;
			animation-duration: 2s;
			animation-timing-function: ease-in-out;
			animation-iteration-count: infinite;
		}
		.flame-main.one {
			animation-duration: 2.2s;
			animation-delay: 1s;
		}
		.flame-main.two {
			animation-duration: 2s;
			animation-delay: 1s;
		}
		.flame-main.three {
			animation-duration: 2.1s;
			animation-delay: 3s;
		}
		.flame-main.four {
			animation-duration: 3.2s;
			animation-delay: 4s;
		}
		.flame-main.five {
			animation-duration: 2.5s;
			animation-delay: 5s;
		}
		@keyframes flameMovement {
			50% {
				transform: scale(0.98, 1) translate(0, 2px) rotate(-1deg);
			}
		}
		@keyframes flameDisappear {
			0% {
				transform: translate(0) rotate(180deg);
			}
			50% {
				opacity: 1;
			}
			100% {
				transform: translate(-10px, -40px) rotate(180deg);
				opacity: 0;
			}
		}
	</style>
</html>
