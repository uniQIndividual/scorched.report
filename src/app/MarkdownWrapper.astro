---
import PopUp from "../components/PopUp.astro";
import TableOfContents from "../components/TableOfContents.astro";

const { frontmatter, headings } = Astro.props;

let newSlug = "";
if (frontmatter && frontmatter.title) {
    newSlug = frontmatter.title.toLowerCase().replaceAll(" ","-").replaceAll(/[^\w-_]/gm,"");
    headings.unshift({depth: 1, slug: newSlug, text: frontmatter.title})
}
const uuid = crypto.randomUUID();
---

<div class={"flex justify-center " + (Object.keys(headings || {}).length > 2 ? " 2xl:mr-[350px]" : "")}>
    <div class={"max-w-[100vw] lg:max-w-[60vw] xl:max-w-[60vw] 2xl:max-w-[60vw] p-6 text-clip overflow-hidden dark:text-gray-300 mt-4 mb-4"}>
		{frontmatter && frontmatter.title ? 
        <h1 class={(headings && headings.length < 2 ? "mb-8" : "mb-0") + " text-gray-900 dark:text-gray-50 font-bold text-4xl"} id={newSlug}>{frontmatter.title}</h1>  : 
        ""}
        {frontmatter && frontmatter.date ? <span class="font-extralight italic">Posted </span> 
        <span class="font-extralight italic">{(new Date(frontmatter.date).toLocaleDateString("en-US", {
                year: "numeric",
                  month: "long",
                    day: "numeric",
                }))}</span> : 
        ""}
        {frontmatter && frontmatter.author ? <span class="font-extralight italic">by</span> 
        <span class="font-extralight italic">{frontmatter.author}</span> : 
        ""}
        <TableOfContents headings={headings} />
        <article
        id=`article_${uuid}`
        class="markdown-article leading-7 2xl:mt-10 prose text-gray-800 dark:text-gray-200
        dark:prose-invert prose-h1:mb-4 prose-h1:mt-14 prose-h2:mb-4 prose-h2:mt-10
        prose-h1:text-gray-900 prose-h1:dark:text-gray-50 prose-h1:font-bold prose-h1:text-xxl
        prose-strong:dark:text-gray-200
        prose-a:text-gray-900 prose-a:dark:text-gray-50 prose-a:underline-offset-2 prose-p:text-justify prose-img:rounded-xl  prose-blockquote:font-normal prose-blockquote:p-4
        prose-blockquote:pt-1 prose-blockquote:rounded-lg prose-blockquote:not-italic prose-blockquote:dark:text-gray-300 prose-blockquote:text-gray-700 prose-blockquote:bg-[rgba(0,0,0,0.2)]"
        >
		    <slot />
        <script define:vars={{ uuid }}> // Add a popup image viewer to all embedded images
          let images = document.getElementById(`article_${uuid}`)?.getElementsByTagName("img");
          Object.values(images).map(image => {
            if (image.naturalHeight > 64 && image.naturalWidth > 64) {
              image.classList.add("cursor-pointer", "hover:brightness-110", "hover:dark:shadow-highlight", "hover:shadow-highlight_darken");
              image.addEventListener("click", () => {
                const popup_image = document.getElementById(`popup_image_${uuid}`);
                popup_image.setAttribute("src", image.src);
                document.getElementById(`popup_${uuid}`).openPop();
              })
          }
        })
        </script>
	    </article>
    </div>
    <PopUp
      id=`popup_${uuid}`
      timer={1}
      description=`Fullscreen viewer for embedded images`
      fullscreen="true"
    >
      <div class="m-1">
        <img
          src=""
          data-url={""}
          id=`popup_image_${uuid}`
          class="object-scale-down w-screen h-screen"
        />
      </div>
    </PopUp>
</div>