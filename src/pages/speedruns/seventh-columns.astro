---
import { Image } from "astro:assets";
import LayoutSidebar from "../../app/LayoutSidebar.astro";
import {
	millisecondsToDisplayTime,
	flattenSpeedrunsWithCategories,
} from "../../lib/fun";
import ImageFirstPlace from "../../assets/icons/rankings/1.webp";
import ImageSecondPlace from "../../assets/icons/rankings/2.webp";
import ImageThirdPlace from "../../assets/icons/rankings/3.webp";
import speedruns from "../../data/speedruns.json";
import FooterNote from "../../components/leaderboard/FooterNote.astro";

const speedrunsSeventhColumns = flattenSpeedrunsWithCategories(speedruns)
	.filter((run) => run.category == "seventhColumn")
	.sort((a, b) => a.time - b.time);
/*[
	{
		name: "Ravioluuuu",
		url: "",
		icon: "",
		id: "4611686018459350478",
		platform: "1",
		time: 13400,
		date_achieved: new Date("Oct 28, 2023 UTC"),
		date_added: new Date("May 7, 2025 UTC"),
		pgcr: 0,
		video: "https://www.youtube.com/watch?v=nuQre56s-fM",
	}, // dyno https://www.youtube.com/watch?v=Yc0kHF-XQG4
	//naze https://youtu.be/UmRbFxzISTE
	//ketchup
	//mangle https://youtu.be/4GhMikkdN3A
	//nblock 22:000
	//uniq?
].sort((a, b) => a.time - b.time);*/
---

<LayoutSidebar
	title="Team Scorched Speedrun Leaderboard - Seventh Columns"
	make_title="Team Scorched Speedrun Leaderboard - Seventh Columns"
	og_title="Team Scorched Speedrun Leaderboard - Seventh Columns"
	og_description="The fastest recorded Seventh Columns in Team Scorched"
	og_image="/images/speedrun_icon.png"
>
<div class="text-center lg:mt-12 lg:mb-6">
	</div>
	<div class="flex justify-center flex-wrap">
		{
			speedrunsSeventhColumns.map(async (run) => {
				const hash = Array.from(
					new Uint8Array(
						await crypto.subtle.digest(
							"SHA-256",
							new TextEncoder().encode(
								run.membershipId +
									"\\" +
									run.category +
									"\\" +
									run.pgcr +
									"\\" +
									run.time
							)
						)
					)
				)
					.map((b) => b.toString(16).padStart(2, "0"))
					.join("");
				const rank = speedrunsSeventhColumns.reduce(
					(rank, entry) => (entry.time < run.time ? rank + 1 : rank),
					1
				);
				let rankIcon = <div class="text-3xl font-black font-bungo text-gray-50 p-2">{rank}</div>;
				switch (rank) {
					case 1:
					rankIcon = <Image
									alt={"First place"}
									loading={"eager"}
									src={ImageFirstPlace}
									class={
										"w-14 object-scale-down mx-2 object-top cursor-pointer"
									}
								/>
						break;
					case 2:
					rankIcon = <Image
									alt={"Second place"}
									loading={"eager"}
									src={ImageSecondPlace}
									class={
										"w-14 object-scale-down mx-2 object-top cursor-pointer"
									}
								/>
						break;
					case 3:
					rankIcon = <Image
									alt={"Third place"}
									loading={"eager"}
									src={ImageThirdPlace}
									class={
										"w-14 object-scale-down mx-2 object-top cursor-pointer"
									}
								/>
						break;
					default:
						break;
				}
				return (
					<a href={"/speedruns/run/" + hash} class="m-3">
						<div class="bg-gray-200 dark:bg-gray-950 rounded-2xl p-2 max-w-72 dark:brightness-150 hover:bg-gray-100 hover:dark:bg-gray-900 cursor-pointer">
							<div class="flex cursor-pointer">
								{rankIcon}
								<div class="p-4 cursor-pointer wrap-anywhere text-wrap">
									<div class=" text-gray-800 dark:text-gray-100 text-3xl cursor-pointer">
										{run.name}
									</div>
									<div class="text-2xl mt-3 text-gray-700 dark:text-gray-200">
										{millisecondsToDisplayTime(run.time)}
									</div>
									<div class="cursor-pointer text-sm">
										Achieved:{" "}
										{new Date(run.date_achieved).toLocaleString("en-US", {
											year: "numeric",
											month: "long",
											day: "numeric",
										})}
									</div>
									<div class="cursor-pointer text-sm">
										Accepted:{" "}
										{new Date(run.date_added).toLocaleString("en-US", {
											year: "numeric",
											month: "long",
											day: "numeric",
										})}
									</div>
								</div>
							</div>
						</div>
					</a>
				);
			})
		}
	</div>
	<FooterNote />
</LayoutSidebar>
