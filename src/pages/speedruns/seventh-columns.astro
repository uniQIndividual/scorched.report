---
import { Image } from "astro:assets";
import LayoutSidebar from "../../app/LayoutSidebar.astro";
import {
	millisecondsToDisplayTime,
	flattenSpeedrunsWithCategories,
} from "../../lib/fun";
import ImageFirstPlace from "../../assets/icons/rankings/1.webp";
import ImageSecondPlace from "../../assets/icons/rankings/2.webp";
import ImageThirdPlace from "../../assets/icons/rankings/3.webp";
import speedruns from "../../data/speedruns.json";
import FooterNote from "../../components/leaderboard/FooterNote.astro";

const speedrunsSeventhColumns = flattenSpeedrunsWithCategories(speedruns)
	.filter((run) => run.category == "seventhColumn")
	.sort((a, b) => a.time - b.time);
---

<LayoutSidebar
	title="Team Scorched Speedrun Leaderboard - Seventh Columns"
	make_title="Team Scorched Speedrun Leaderboard - Seventh Columns"
	og_title="Team Scorched Speedrun Leaderboard - Seventh Columns"
	og_description="The fastest recorded Seventh Columns in Team Scorched"
	og_image="/images/speedrun_icon.png"
>
	<div class="text-center xl:mt-12 xl:mb-6"></div>
	<div class="flex justify-center flex-wrap mb-10">
		<div class="table">
			{
				speedrunsSeventhColumns.map(async (run) => {
					const hash = Array.from(
						new Uint8Array(
							await crypto.subtle.digest(
								"SHA-256",
								new TextEncoder().encode(
									run.membershipId +
										"\\" +
										run.category +
										"\\" +
										run.pgcr +
										"\\" +
										run.time
								)
							)
						)
					)
						.map((b) => b.toString(16).padStart(2, "0"))
						.join("");
					const rank = speedrunsSeventhColumns.reduce(
						(rank, entry) => (entry.time < run.time ? rank + 1 : rank),
						1
					);
					let rankIcon = (
						<div class="text-xl font-black font-bungo text-gray-50 p-2">
							{rank}
						</div>
					);
					switch (rank) {
						case 1:
							rankIcon = (
								<Image
									alt={"First place"}
									loading={"eager"}
									src={ImageFirstPlace}
									class={
										"w-10 object-scale-down mx-2 object-top cursor-pointer"
									}
								/>
							);
							break;
						case 2:
							rankIcon = (
								<Image
									alt={"Second place"}
									loading={"eager"}
									src={ImageSecondPlace}
									class={
										"w-10 object-scale-down mx-2 object-top cursor-pointer"
									}
								/>
							);
							break;
						case 3:
							rankIcon = (
								<Image
									alt={"Third place"}
									loading={"eager"}
									src={ImageThirdPlace}
									class={
										"w-10 object-scale-down mx-2 object-top cursor-pointer"
									}
								/>
							);
							break;
						default:
							break;
					}
					return (
						<div class="table-row ">
							<div class="table-cell xl:inline">
								<br />
								<a href={"/speedruns/run/" + hash} class="">
									<div class="bg-gray-200 dark:bg-gray-950 rounded-2xl p-2  dark:brightness-150 hover:bg-gray-100 hover:dark:bg-gray-900 cursor-pointer ">
										<div class="flex cursor-pointer">
											{rankIcon}
											<div class="p-2 cursor-pointer wrap-break-word text-wrap">
												<div class="xl:table-cell xl:px-2 text-2xl text-gray-700 dark:text-gray-200">
													{millisecondsToDisplayTime(run.time)}
												</div>
												<div class="xl:table-cell xl:px-2 text-gray-800 dark:text-gray-100 text-2xl cursor-pointer">
													{run.name}
												</div>
												<div class="xl:table-cell xl:px-2 cursor-pointer text-sm">
													{run.map}
												</div>
												<div class="xl:table-cell xl:px-2 cursor-pointer text-sm">
													Achieved:{" "}
													{new Date(run.date_achieved).toLocaleString("en-US", {
														year: "numeric",
														month: "short",
														day: "numeric",
													})}
												</div>
											</div>
										</div>
									</div>
								</a>
							</div>
						</div>
					);
				})
			}
		</div>
	</div>
	<FooterNote />
</LayoutSidebar>
