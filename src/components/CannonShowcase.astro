---
/* eslint max-lines: 'off' */
import GLTFViewer from "./cannon_showcase/GLTFViewer";
import PopUp from "./PopUp.astro";
import TooltipSimple from "./TooltipSimple.astro";

const { cannon, key, index } = Astro.props;

const uuid = crypto.randomUUID(); // We need a uuid to load the image popup

---

			<a href={"/collections/" + key + "/" + encodeURI(cannon.name.replaceAll(' ', '-'))} class="">
<div class="w-[450px] 2xl: p-4 my-4 lg:mx-4 bg-gray-100 border-gray-100 rounded-lg dark:border-gray-920 sm:p-6 dark:bg-gray-920  !cursor-pointer hover:brightness-110 hover:dark:shadow-highlight hover:shadow-highlight_darken">
		<div>
			<div class="absolute p-2 z-10">
			{/*<button
				class="bg-transparent image-to-fullscreen !cursor-pointer"
				type="button"
			data-tooltip-target={"cannon_fullscreen_button_tooltip_" + uuid}
				data-cannon={uuid}
			>
			<svg
			class="w-6 h-6 text-gray-100 hover:text-white hover:brightness-110"
			aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
				<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 4h4m0 0v4m0-4-5 5M8 20H4m0 0v-4m0 4 5-5"/>
			</svg>
			</button>
		<TooltipSimple id={"cannon_fullscreen_button_tooltip_" + uuid} title="Fullscreen" /> */}
			{cannon.hasOwnProperty("3d") ? 
			<img
			id={"cannon_3d_toggle_icon_" + uuid}
			data-tooltip-target={"cannon_3d_toggle_icon_tooltip_" + uuid}
			 src="/images/3d/3d_small.webp" 
			 class="h-6 hover:brightness-110 !cursor-pointer m-1"
					loading="eager"
			 />
		<TooltipSimple id={"cannon_3d_toggle_icon_tooltip_" + uuid} title="View in 3D" />
		:""}
		</div>
				<img
				id={"cannon_preview_image" + uuid}
					src={cannon?.image.replace("/cannons/","/cannons/smaller/")}
					class="object-scale-down justify-center rounded-lg no-fullscreen "
					loading="lazy"
					decoding="async"
				/>
		</div>
		<div class="mt-3 space-y-0.5">
			<table>
				<tr>
					<td class="align-top">
						<span class="font-light text-gray-500 dark:text-gray-500">
							Name:
						</span>
					</td>
					<td class="align-top pl-1">
						<span class="text-gray-800 font-normal dark:text-gray-200">
							{cannon?.name}
						</span>
						{
							cannon.alt_name ? (
								<span class="pl-1 font-extralight text-gray-800 dark:text-gray-300">
									({cannon.alt_name})
								</span>
							) : (
								""
							)
						}
					</td>
				</tr>
			</table>
			<table>
				<tr>
					<td class="align-top">
						<span class="font-light text-gray-500 dark:text-gray-500">
							Created by:
						</span>
					</td>
					<td class="align-top pl-1">
						<span class="text-gray-800 font-normal dark:text-gray-200">
							{cannon?.author}
						</span>
					</td>
				</tr>
			</table>
			{
				typeof index == "number" ? (
					<table>
						<tr>
							<td class="align-top">
								<span class="font-light text-gray-500 dark:text-gray-500">
									Tier:
								</span>
							</td>
							<td class="align-top pl-1">
								<span class="text-gray-800 font-normal dark:text-gray-200">
									{index + 1}
								</span>
							</td>
						</tr>
					</table>
				) : (
					""
				)
			}
			<table>
				<tr>
					<td class="align-top">
						<span class="font-light text-gray-500 dark:text-gray-500">
							Cost:
						</span>
					</td>
					<td class="align-top pl-1">
						<span class="text-gray-800 font-normal dark:text-gray-200 inline-flex">
							{cannon?.cost} 
							<img title="Earn scoins by winning Team Scorched matches after signing up to the Scorched Bot" class="ml-1" src="/images/icons/scoin_26px.png" />
						</span>
					</td>
				</tr>
			</table>
			<table>
				<tr>
					<td class="align-top">
						<span class="font-light text-gray-500 dark:text-gray-500">
							Bonus:
						</span>
					</td>
					<td class="align-top pl-1">
						<span
							class="text-gray-800 font-normal dark:text-gray-200 inline-flex"
						>
							{cannon?.scoin_bonus}
								<img title="Earn scoins by winning Team Scorched matches after signing up to the Scorched Bot" class="ml-1" src="/images/icons/scoin_26px.png" />
						</span>
					</td>
				</tr>
			</table>
			{
				cannon.description ? (
								<span class="font-light text-gray-500 dark:text-gray-500 align-top">
									Description:
								</span>
								<span class="text-gray-800 font-normal dark:text-gray-200 align-top pl-0 ">
									{cannon?.description}
								</span>
				) : (
					""
				)
			}
			{/*<div>
				<PopUp
					id=`popup_${uuid}`
					timer={1}
					description=`Showcasing the ${cannon.name} Scorched Cannon`
					fullscreen="true"
				>
					<div class="m-1">
						<img
							src=""
							data-url={cannon?.image}
							id=`popup_image_${uuid}`
							class="object-scale-down w-screen h-screen"
						/>
					</div>
				</PopUp>
			</div>
		</div>*/}
</div>
</a>